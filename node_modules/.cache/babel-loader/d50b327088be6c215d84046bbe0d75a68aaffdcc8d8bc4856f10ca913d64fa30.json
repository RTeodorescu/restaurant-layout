{"ast":null,"code":"var _jsxFileName = \"/Users/razy/projacts/my-react-project/src/App.js\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg';\n//import './App.css';\n\n//import React, { useState, useEffect } from 'react';\nimport React, { useEffect, useRef } from 'react';\nimport * as fabric from 'fabric';\n\n// const App = () => {\n//   const [canvas, setCanvas] = useState('');\n//   useEffect(() => {\n//     setCanvas(initCanvas());\n//   }, []);\n//   const initCanvas = () => (\n//     new fabric.Canvas('canvas', {\n//       height: 800,\n//       width: 800,\n//       backgroundColor: 'pink'\n//     })\n//   )\n//   return(\n//     <div>\n//       <h1>Fabric.js on React - fabric.Canvas('...')</h1>\n//       <canvas id=\"canvas\" />\n//     </div>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const canvasEl = useRef < HTMLCanvasElement > null;\n  useEffect(() => {\n    const options = {};\n    const canvas = new fabric.Canvas(canvasEl.current, options);\n    // make the fabric.Canvas instance available to your app\n    updateCanvasContext(canvas);\n    return () => {\n      updateCanvasContext(null);\n      canvas.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    width: \"300\",\n    height: \"300\",\n    ref: canvasEl\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","fabric","jsxDEV","_jsxDEV","App","_s","canvasEl","HTMLCanvasElement","options","canvas","Canvas","current","updateCanvasContext","dispose","width","height","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/razy/projacts/my-react-project/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\n//import './App.css';\n\n//import React, { useState, useEffect } from 'react';\nimport React, { useEffect, useRef } from 'react';\nimport * as fabric from 'fabric';\n\n// const App = () => {\n//   const [canvas, setCanvas] = useState('');\n//   useEffect(() => {\n//     setCanvas(initCanvas());\n//   }, []);\n//   const initCanvas = () => (\n//     new fabric.Canvas('canvas', {\n//       height: 800,\n//       width: 800,\n//       backgroundColor: 'pink'\n//     })\n//   )\n//   return(\n//     <div>\n//       <h1>Fabric.js on React - fabric.Canvas('...')</h1>\n//       <canvas id=\"canvas\" />\n//     </div>\n//   );\n// }\n\nexport const App = () => {\n  const canvasEl = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    const options = {};\n    const canvas = new fabric.Canvas(canvasEl.current, options);\n    // make the fabric.Canvas instance available to your app\n    updateCanvasContext(canvas);\n    return () => {\n      updateCanvasContext(null);\n      canvas.dispose();\n    }\n  }, []);\n\n  return <canvas width=\"300\" height=\"300\" ref={canvasEl}/>;\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,MAAM,MAAM,QAAQ;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGN,MAAM,GAACO,iBAAiB,GAAE,IAAK;EAChDR,SAAS,CAAC,MAAM;IACd,MAAMS,OAAO,GAAG,CAAC,CAAC;IAClB,MAAMC,MAAM,GAAG,IAAIR,MAAM,CAACS,MAAM,CAACJ,QAAQ,CAACK,OAAO,EAAEH,OAAO,CAAC;IAC3D;IACAI,mBAAmB,CAACH,MAAM,CAAC;IAC3B,OAAO,MAAM;MACXG,mBAAmB,CAAC,IAAI,CAAC;MACzBH,MAAM,CAACI,OAAO,CAAC,CAAC;IAClB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOV,OAAA;IAAQW,KAAK,EAAC,KAAK;IAACC,MAAM,EAAC,KAAK;IAACC,GAAG,EAAEV;EAAS;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC1D,CAAC;AAACf,EAAA,CAdWD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAgBhB,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}