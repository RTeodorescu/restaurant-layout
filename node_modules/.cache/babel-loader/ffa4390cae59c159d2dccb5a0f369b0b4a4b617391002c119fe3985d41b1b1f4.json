{"ast":null,"code":"var _jsxFileName = \"/Users/razy/projacts/my-react-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as fabric from 'fabric'; // v6\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FabricJSCanvas = () => {\n  _s();\n  // const canvasEl = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    const options = {\n      width: 800,\n      height: 800,\n      backgroundColor: 'pink'\n    };\n    const canvas = new fabric.Canvas('canvas', options);\n    //  const canvas = new fabric.Canvas(canvasEl.current, options);\n\n    const rect = new fabric.Rect({\n      top: 10,\n      left: 10,\n      width: 60,\n      height: 70,\n      fill: 'yellow'\n    });\n    canvas.add(rect);\n\n    // make the fabric.Canvas instance available to your app\n    updateCanvasContext(canvas);\n    // canvas.renderAll();\n\n    return () => {\n      updateCanvasContext(null);\n      canvas.dispose();\n    };\n  }, []);\n\n  // return <canvas width=\"300\" height=\"300\" ref={canvasEl}/>;\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    width: \"300\",\n    height: \"300\",\n    id: \"canvas\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n_s(FabricJSCanvas, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = FabricJSCanvas;\nfunction updateCanvasContext(canvas) {\n  if (canvas) {\n    canvas.renderAll();\n  }\n}\nexport default FabricJSCanvas;\nvar _c;\n$RefreshReg$(_c, \"FabricJSCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","fabric","jsxDEV","_jsxDEV","FabricJSCanvas","_s","options","width","height","backgroundColor","canvas","Canvas","rect","Rect","top","left","fill","add","updateCanvasContext","dispose","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","renderAll","$RefreshReg$"],"sources":["/Users/razy/projacts/my-react-project/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as fabric from 'fabric'; // v6\n\n\nexport const FabricJSCanvas = () => {\n  // const canvasEl = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    const options = { \n      width: 800,\n      height: 800,\n      backgroundColor: 'pink'\n     };\n     const canvas = new fabric.Canvas('canvas', options);\n    //  const canvas = new fabric.Canvas(canvasEl.current, options);\n\n    const rect = new fabric.Rect({\n      top: 10,\n      left: 10,\n      width: 60,\n      height: 70,\n      fill: 'yellow',\n  });\n  \n  canvas.add(rect);\n\n     // make the fabric.Canvas instance available to your app\n    updateCanvasContext(canvas);\n    // canvas.renderAll();\n\n    return () => {\n      updateCanvasContext(null);\n      canvas.dispose();\n    }\n  }, []);\n\n  // return <canvas width=\"300\" height=\"300\" ref={canvasEl}/>;\n  return <canvas width=\"300\" height=\"300\" id='canvas'/>;\n};\n\nfunction updateCanvasContext(canvas) {\n  if (canvas) {\n    canvas.renderAll();\n  } \n}\nexport default FabricJSCanvas;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,MAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGlC,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC;EACAN,SAAS,CAAC,MAAM;IACd,MAAMO,OAAO,GAAG;MACdC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXC,eAAe,EAAE;IAClB,CAAC;IACD,MAAMC,MAAM,GAAG,IAAIT,MAAM,CAACU,MAAM,CAAC,QAAQ,EAAEL,OAAO,CAAC;IACpD;;IAEA,MAAMM,IAAI,GAAG,IAAIX,MAAM,CAACY,IAAI,CAAC;MAC3BC,GAAG,EAAE,EAAE;MACPC,IAAI,EAAE,EAAE;MACRR,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVQ,IAAI,EAAE;IACV,CAAC,CAAC;IAEFN,MAAM,CAACO,GAAG,CAACL,IAAI,CAAC;;IAEb;IACDM,mBAAmB,CAACR,MAAM,CAAC;IAC3B;;IAEA,OAAO,MAAM;MACXQ,mBAAmB,CAAC,IAAI,CAAC;MACzBR,MAAM,CAACS,OAAO,CAAC,CAAC;IAClB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBAAOhB,OAAA;IAAQI,KAAK,EAAC,KAAK;IAACC,MAAM,EAAC,KAAK;IAACY,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACvD,CAAC;AAACnB,EAAA,CAjCWD,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AAmC3B,SAASc,mBAAmBA,CAACR,MAAM,EAAE;EACnC,IAAIA,MAAM,EAAE;IACVA,MAAM,CAACgB,SAAS,CAAC,CAAC;EACpB;AACF;AACA,eAAetB,cAAc;AAAC,IAAAqB,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}